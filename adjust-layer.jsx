function placeClip(activeSeq , track, subClip){    subClip.setScaleToFrameSize();// SET SCALE TO FRAME SIZE                             if(activeSeq.videoTracks[track].clips.numItems == 0){ // IF THERE ARE NOT CLIPS IN THE SEQUENCE, PLACE FRIST CLIP AT TIME ZERO                        activeSeq.videoTracks[track].insertClip(subClip,0)                         //clipCounter++;                        } else { // IF THERE ARE CLIPS IN THE SEQUENCE, PLACE AT THE TIMECODE OF END OF THE LAS CLIP + THE BUFFER TIME                        var numClips = activeSeq.videoTracks[track].clips.numItems;                        var insertTime = activeSeq.videoTracks[track].clips[numClips - 1].end.seconds;                        activeSeq.videoTracks[track].insertClip(subClip,insertTime);                        //clipCounter++;                        }                    }                                 function findBinIndex(currentItem, nameToFind){       if(nameToFind){    for (var j = 0; j < currentItem.children.numItems; j++){          var currentChild = currentItem.children[j];                              if (currentChild.type == ProjectItemType.BIN && currentChild.name.toUpperCase() == nameToFind.toUpperCase() ){                        globalBind = currentChild;                        return currentChild;                    }                             if (currentChild.type == ProjectItemType.BIN){                          findBinIndex(currentChild, nameToFind);                      }           }          } else {        alert("No bin was targeted");       }   }proj = app.project;var activeSeq = proj.activeSequence;var  blurBin = findBinIndex(proj.rootItem, "05_EXERCISES-BLURRED");//var duration  = activeSeq.end.seconds;var  adjLayerBin = findBinIndex(proj.rootItem, "BLURRY-ADJ");var adjLayerBlurry = adjLayerBin.children[0];//adjLayerBlurry.setOutPoint(duration);placeClip(activeSeq,1,adjLayerBlurry);